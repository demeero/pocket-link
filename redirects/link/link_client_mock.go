// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/demeero/pocket-link/proto/gen/go/pocketlink/link/v1beta1 (interfaces: LinkServiceClient)

// Package link is a generated GoMock package.
package link

import (
	context "context"
	reflect "reflect"

	v1beta1 "github.com/demeero/pocket-link/proto/gen/go/pocketlink/link/v1beta1"
	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockLinkServiceClient is a mock of LinkServiceClient interface.
type MockLinkServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockLinkServiceClientMockRecorder
}

// MockLinkServiceClientMockRecorder is the mock recorder for MockLinkServiceClient.
type MockLinkServiceClientMockRecorder struct {
	mock *MockLinkServiceClient
}

// NewMockLinkServiceClient creates a new mock instance.
func NewMockLinkServiceClient(ctrl *gomock.Controller) *MockLinkServiceClient {
	mock := &MockLinkServiceClient{ctrl: ctrl}
	mock.recorder = &MockLinkServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinkServiceClient) EXPECT() *MockLinkServiceClientMockRecorder {
	return m.recorder
}

// GetLink mocks base method.
func (m *MockLinkServiceClient) GetLink(arg0 context.Context, arg1 *v1beta1.GetLinkRequest, arg2 ...grpc.CallOption) (*v1beta1.GetLinkResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetLink", varargs...)
	ret0, _ := ret[0].(*v1beta1.GetLinkResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLink indicates an expected call of GetLink.
func (mr *MockLinkServiceClientMockRecorder) GetLink(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLink", reflect.TypeOf((*MockLinkServiceClient)(nil).GetLink), varargs...)
}
